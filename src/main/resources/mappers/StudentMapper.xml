<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring5_mybatis_study.mapper.StudentMapper"> <!-- 패키지 위치 지정해야됨 -->

	<sql id="selectSQL">
		select stud_id, name, email, phone, dob ,gender
		from students
	</sql>
	<sql id="whereSQL">
		<where>
			<if test="studId != null">
			 	stud_id =#{studId}
			</if>
		</where>
	</sql>

	<select id="selectStudentById" parameterType="Student"
		resultType="Student">
		<include refid="selectSQL"/>
		<include refid="whereSQL"/>
	</select>
	
	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSQL"/>
	</select>
	<!-- 타입핸들러 없이 쓰는방법 -->
	<resultMap type="Student" id="stdResult">
		<id column="stud_id" property="studId"/> <!-- 카멜 표기법 맵핑 셋팅 해줬으면 안해도됨 -->
		<result column="f" property="phone.countryCode"/>
		<result column="m" property="phone.stateCode"/>
		<result column="l" property="phone.number"/>
	</resultMap>
	
	<select id="selectStudentByNoWithResultMap" parameterType="Student" resultMap="stdResult">
		select stud_id, name, email, dob,
		substring(phone, 1, 3) as f,
		substring(phone, 5, 3) as m,
		substring(phone, 9, 4) as l
		from students 
		<include refid="whereSQL"/>
	</select>
	
	<!-- <insert id="insertStudent" parameterType="Student" > -->
	<insert id="insertStudent">
		insert into students(stud_id, name, email, phone, dob) 
		values(#{studId},#{name},#{email},#{phone},#{dob})
	</insert>
	
	<!-- <delete id="deleteStudent" parameterType="int"> -->
	<delete id="deleteStudent">
		delete 
		from students
		<include refid="whereSQL"/>
	</delete>
	<!-- <update id="updateStudent" parameterType="Student"> -->
	<update id="updateStudent">
		update students 
		set name=#{name} ,email=#{email} ,phone=#{phone} , dob=#{dob}
		<include refid="whereSQL"/>
	</update>
	
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSQL"/>
	</select>
	
	<resultMap type="Student" id="StudentREsult">
		<id column="stud_id" property="studId"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<resultMap type="Student" id="StudentAssociation" extends="StudentREsult">
		<association property="address" resultMap="spring5_mybatis_study.mapper.AddressMapper.AddressResultMap"/>
	</resultMap>
	
	<select id="selectStudentByNoAssociation" resultMap="StudentREsult">
		select stud_id, name, email, phone, dob, 
			a.addr_id, street, city, state, zip, country
		from students s 
		join addresses a 
		on s.addr_id =a.addr_id
		<include refid="whereSQL"/>
	</select>
	
	
	
	<!-- enum 타입 다루기 -->
	<insert id="insertEnumStudent" parameterType="Student">
		insert into students(stud_id, name, email,phone, dob, gender) 
			values(#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})
	</insert>
	
	
	
	<sql id="where_name_email">
		<where>
			<if test="name != null">
				and name = #{name}
			</if>
			<if test="email != null">
				and email = #{email}
			</if>
		</where>
	</sql>
	<select id="selectStudentByMap" resultType="Student">
		<include refid="selectSQL"/>
		<include refid="where_name_email"/>
	</select>	
	<select id="selectAllStudentByMap" resultType="Student">
		<include refid="selectSQL"/>
		<include refid="where_name_email"/>
	</select>	
	
	
	<!-- ResultSet 처리방식의 재정의 -->
	<select id="selectStudentForMap" parameterType="int" resultMap="StudentREsult">
		<include refid="selectSQL"/>
		<include refid="whereSQL"/>
	</select>
	
	<update id="updateSetStudent">
		update students
		<set>
			<if test="name != null">name=#{name},</if>
			<if test="email != null">email=#{email},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="dob != null">dob=#{dob},</if>
		</set>
		<include refid="whereSQL"/>
	</update>
	
</mapper>